# Maintainer: Jupyter Gallery Team <team@jupyter.gallery>
pkgname=gallery-cpp-kernel
pkgver=1.0.1
pkgrel=0
pkgdesc="C++ kernel for the Jupyter Gallery alpine client"
url="https://github.com/jupyter-gallery/alpine-testing"
arch="x86_64"
license="MIT"
depends=""
depends_dev=""
makedepends="$depends_dev git python py2-pip cmake"
install=""
subpackages=""
source="
	cling-kernel.patch
	llvm-0002-Fix-build-with-musl-libc.patch
	llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
	llvm-nm-workaround.patch
	"

_builddir=$startdir/build
_prefix=/usr
_libdir=$_prefix/lib
_bindir=$_prefix/bin
_includedir=$_prefix/include

prepare() {
	cd $startdir
	mkdir -p $srcdir
	cd $srcdir

	# Check out source
	git clone http://root.cern.ch/git/llvm.git llvm
	cd llvm
	git checkout cling-patches
	cd tools
	git clone http://root.cern.ch/git/cling.git
	git clone http://root.cern.ch/git/clang.git
	cd clang
	git checkout cling-patches

	# Apply patches
	cd $srcdir/llvm
	patch -p1 < $startdir/llvm-0002-Fix-build-with-musl-libc.patch
	patch -p1 < $startdir/llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
	patch -p1 < $startdir/llvm-nm-workaround.patch
	cd $srcdir/llvm/tools/cling
	patch -p1 < $startdir/cling-kernel.patch
}

build() {
	cd $startdir
	mkdir -p $_builddir
	cd $_builddir

	# Configure with options to minimize size.
	cmake \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_INSTALL_PREFIX=$_prefix \
		-DCMAKE_CXX_FLAGS="$CXXFLAGS -fpermissive -D_GLIBCXX_USE_CXX11_ABI=0" \
		-DLLVM_BUILD_DOCS=OFF \
		-DLLVM_BUILD_EXAMPLES=OFF \
		-DLLVM_BUILD_TESTS=OFF \
		-DLLVM_ENABLE_CXX1Y=ON \
		-DLLVM_ENABLE_DOXYGEN=OFF \
		-DLLVM_ENABLE_RTTI=ON \
		-DLLVM_ENABLE_SPHINX=OFF \
		-DLLVM_INCLUDE_DOCS=OFF \
		-DLLVM_INCLUDE_EXAMPLES=OFF \
		-DLLVM_INCLUDE_TESTS=OFF \
		-DLLVM_TARGETS_TO_BUILD=X86 \
		-DCLANG_BUILD_EXAMPLES=OFF \
		-DCLANG_ENABLE_ARCMT=OFF \
		-DCLANG_ENABLE_STATIC_ANALYZER=OFF \
		../src/llvm/ 

	# Build
	cmake --build . --target clang
	cmake --build . --target cling
	cmake --build . --target libclingJupyter
}

package() {
	# Install the cling files we need
	cd $startdir
	mkdir -p $pkgdir
	mkdir -p $pkgdir/$_bindir
	mkdir -p $pkgdir/$_libdir
	mkdir -p $pkgdir/$_includedir
	cp $_builddir/bin/cling $pkgdir/$_bindir
	cp -r $_builddir/lib/clang $pkgdir/$_libdir
	cp -r $srcdir/llvm/tools/cling/include/cling $pkgdir/$_includedir
	rm $pkgdir/$_includedir/cling/Makefile

	# Install the kernel itself
	cp $_builddir/lib/libclingJupyter.so $pkgdir/$_libdir
	cp $srcdir/llvm/tools/cling/tools/Jupyter/kernel/scripts/jupyter-cling-kernel $pkgdir/$_bindir
	cd $srcdir/llvm/tools/cling/tools/Jupyter/kernel
	pip install --root="$pkgdir" .
}
md5sums="89564aefaeb6607ab6afd98e3e7ba7cf  cling-kernel.patch
e784f2d249887b370d986d97e569d847  llvm-0002-Fix-build-with-musl-libc.patch
673d5c2e10e8be51cf9a8d0793ba49c1  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
941c06516943657760905123729429fb  llvm-nm-workaround.patch"
sha256sums="6e138e72614a00e034d6b51710aad8e63a56e6e98399b2945fb01efabd2ad81a  cling-kernel.patch
053bf96cbaa669ff7d2dae093a50c8a43c97bd173ca62617f1e15a30ea8ad949  llvm-0002-Fix-build-with-musl-libc.patch
b626c87b4097ee385154fe0db8dee07e1880ee9dc1097cfd8d385d10fc7e85c8  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
d1daab63ada2cd10a3117780de9969de1ed56900066d8ed9899fbcc6e7103611  llvm-nm-workaround.patch"
sha512sums="e496fdd9b2553ff557cdc001a0f7e01f1f8ee0459eb64f9a569c94390e48082181fac1daf170fa478ab5566822b5b1fab0a3e995f1e449d34169c57a32a37f08  cling-kernel.patch
3ac81c0801e70c0491ee83e601b2687e63ec439bc110d4c522765f3ba1dee863f7d6a67bc26af03293fe6f8dbb0e084972e85a15f442927894fca541b8cc7237  llvm-0002-Fix-build-with-musl-libc.patch
d996f1512011f7700c3f08ef801973b6e4f5d5c218fa72e38750a1dadbd761f53ede86c48af41d63e782a07ed9675ecba3b921aa8ee17ed124236f1e3411fe86  llvm-0003-Fix-DynamicLibrary-to-build-with-musl-libc.patch
0fe536291138172a755257b1f2c6c7133ce5fa312e723079cffa0a4ccf547d26c59800a8018f63ec1ec4d144fd24d6dfcf9e74bdc3ed435005576aa4d8276b7e  llvm-nm-workaround.patch"
